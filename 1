
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local UserID = LocalPlayer.UserId

local function debugprint(text, ...)
	if _G.DebugPrint then
		local args = { ... }
		if #args > 0 then
			text = text .. " " .. table.concat(args, " ")
		end
		print("Debug: " .. text)
	end
end

local function isUserInAccounts(userId)
	for _, account in ipairs(getgenv().Config.Accounts) do
		if account.ID == userId then
			-- Wenn die ID gefunden wird, führe zusätzliche Checks durch
			-- Beispiel: Überprüfe, ob das Skript existiert
			local scriptKey = "Script " .. account.script
			local scriptUrl = getgenv().Config.Scripts[scriptKey]

			if scriptUrl then
				-- ID und Skript wurden gefunden
				return true
			else
				-- ID gefunden, aber kein Skript zugewiesen
				debugprint("Script URL not found for script ID:", account.script)
				return false
			end
		end
	end
	return false
end


local function getUserScripts(userId)
	local userScripts = {}
	for _, account in ipairs(getgenv().Config.Accounts) do
		if account.ID == userId then
			local scriptKey = "Script " .. account.script
			local scriptUrl = getgenv().Config.Scripts[scriptKey]
			if scriptUrl then
				table.insert(userScripts, scriptUrl)
			else
				debugprint("Script URL not found for key:", scriptKey)
			end
		end
	end
	return userScripts
end

local function ExecuteRawlink(scriptUrl)
	loadstring(game:HttpGet(scriptUrl))()
end

local function getScripts()
	local scripts = {}
	for scriptName, scriptUrl in pairs(getgenv().Config.Scripts) do
		table.insert(scripts, { name = scriptName, url = scriptUrl })
	end
	return scripts
end

if isUserInAccounts(UserID) then
	local userScripts = getUserScripts(UserID)
	if #userScripts > 0 then
		for _, scriptUrl in ipairs(userScripts) do
			debugprint("User Script URL:", scriptUrl)
			ExecuteRawlink(scriptUrl)
		end
	else
		debugprint("No scripts found for this user.")
	end
else
	debugprint("User not in accounts list.")
end

-- Example of using getScripts function
local allScripts = getScripts()
for _, script in ipairs(allScripts) do
	debugprint("Script Name:", script.name, "URL:", script.url)
end
